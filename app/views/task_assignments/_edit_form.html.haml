=form_with(url: task_assignments_path(task), html: { class: 'd-inline' }, method: :patch) do |form|
  -if current_account.types.include?('manager') || task.creator?(current_account)
    .row.justify-content-start.small
      .col-3
        assignment to:
      .col-9
        .row.mt-1.small
          =form.collection_select 'assignment_to', !current_account.types.include?('manager') ? [current_account] : Account.all.order([:first_name, :last_name]), :id, :name, { prompt: '' , selected: task.main_assignee.nil? ? '' : task.main_assignee.id, class: 'small'}
    .row.justify-content-start.mt-1.small
      .col-3
        assistants:
        =icon('fa', 'plus', class: 'ml-2', id: 'addAssistantTask')
      .col-9#assistantsTaskForm.small
        -task.assistants.each  do |assistant|
          .row.mt-1
            =form.collection_select 'assistants[]', !current_account.types.include?('manager') ? [current_account] : Account.all.order([:first_name, :last_name]), :id, :name, { prompt: '' , selected: assistant.id, class: 'small'}
            -if current_account.types.include?('manager')
              .ml-1{ onclick: "removeDate(this)" }
                =icon('fa', 'minus')
  =form.submit 'update', class: 'small mt-1 btn btn-sm btn-outline-dark'
  =link_to('cancel', cancel_task_assignments_path(task), method: :get, remote: true, class: 'small mt-1 btn btn-sm btn-outline-dark')

:javascript
  var accounts = #{raw Account.all.order([:first_name, :last_name]).map{ |account| [account.first_name.to_s + ' ' + account.last_name.to_s, account.id]} };

  $('#addAssistantTask').click(function () {
    let hex = secureRandom(6);

    $('#assistantsTaskForm').append(
        `<div id="assistant_${hex}" class="row mt-1" >
           <select id="assistants[]" name="assistants[]">${buildSelect(accounts)}</select>
           <div class="ml-1" id="rm_assistant_${hex}" onclick="removeDate(this)"><i class="fa fa-minus"></i></div>
         </div>`
    );
  });

  $('#delete_assistant').click(function () {
    let assignments = document.getElementById('assignments')
    assignments.removeChild(assignments.lastChild)

  });

  function buildSelect(options) {
    var $select = $('');
    $select += ('<option value="' + '' + '">' + '' + '</option>');
    for (var i = 0; i < options.length; i++) {
      $select += ('<option value="' + options[i][1] + '">' + options[i][0] + '</option>');
    }
    return $select;
  }

  function removeDate(elem) {
    $(elem.parentNode).remove();
  }

  function secureRandom(n){
    let result = '';
    while (n--){
      result += Math.floor(Math.random() * 16).toString(16);
    }
    return result;
  }
