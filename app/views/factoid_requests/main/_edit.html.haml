=form_with(url: factoid_request_path(@factoid_request), method: 'PUT', html: { class: 'small', onkeypress: "return event.keyCode !== 13;" } ) do |f|
  #nameAnchor.mb-1
  #name.card
    .card-body
      .font-weight-bold.mb-1
        NAME:
        %span.small.text-danger
          *required
      =f.text_field "factoid_request[name]", class: 'form-control form-control-sm', value: @factoid_request.name

  #opportunitiesAnchor.mb-3
  #opportunities.card
    .card-body
      .font-weight-bold.mb-1
        .row
          .col-6
            AGENCY:
          .col-6
            OPPORTUNITY:
      .opportunity
        .row
          .col-6
            =f.collection_select 'factoid_request[agency_id]', Agency.order(:name), :id, :name,
                                 { include_blank: '', selected: @factoid_request.agency&.id },
                                 { class: 'form-control form-control-sm', onchange: 'updateOpportunitiesList(this.value)' }
          .col-6
            -opportunities = @factoid_request.agency&.opportunities || []
            =f.collection_select 'factoid_request[opportunity_id]', opportunities, :id, :name,
                                 { include_blank: '', selected: @factoid_request.opportunity&.id },
                                 { class: 'form-control form-control-sm' }
          :javascript
            function updateOpportunitiesList(agency_id) {
              console.log(agency_id);
              Rails.ajax({
                type: "GET",
                dataType: 'json',
                url: `#{api_opportunities_path}`,
                data: `agency_id=${encodeURIComponent(agency_id)}`,
                success: function (data) {
                  let select = document.querySelector('select[name="factoid_request[opportunity_id]"]');

                  select.innerHTML = '';

                  let option = document.createElement('option');
                  option.value = '';
                  option.textContent = '';
                  select.appendChild(option);

                  data.forEach(el => {
                    option = document.createElement('option');
                    option.value = el['id'];
                    option.textContent = el['name'];
                    select.appendChild(option);
                  })
                }
              })
            }

  #descriptionAnchor.mb-3
  #description.card
    .card-body
      .font-weight-bold.mb-1
        DESCRIPTION:
      =f.text_area "factoid_request[description]", value: @factoid_request.description&.body
  :javascript
    $('#description textarea').froalaEditor({
      key: 'KfdolbcqsaA2wzA-13==',
      editorClass: 'border rounded p-2',
      toolbarInline: true,
      toolbarButtons: ['undo', 'redo', '|', 'bold', 'italic', 'underline', 'strikeThrough', '|', 'color', 'lineHeight', '|', 'paragraphFormat', 'align', 'formatOL', 'formatUL', 'insertLink', 'insertImage'],
      imageUploadURL: '/images/upload',
      imageUploadMethod: 'POST',
      toolbarVisibleWithoutSelection: false,
      zIndex: 3333,
      heightMin: 100,
      placeholderText: 'Type here....'
    })


  #purposeAnchor.mb-3
  #purpose.card
    .card-body
      .font-weight-bold.mb-1
        PURPOSE:
      =f.text_area "factoid_request[purpose]", value: @factoid_request.description&.body
  :javascript
    $('#purpose textarea').froalaEditor({
      key: 'KfdolbcqsaA2wzA-13==',
      editorClass: 'border rounded p-2',
      toolbarInline: true,
      toolbarButtons: ['undo', 'redo', '|', 'bold', 'italic', 'underline', 'strikeThrough', '|', 'color', 'lineHeight', '|', 'paragraphFormat', 'align', 'formatOL', 'formatUL', 'insertLink', 'insertImage'],
      imageUploadURL: '/images/upload',
      imageUploadMethod: 'POST',
      toolbarVisibleWithoutSelection: false,
      heightMin: 100,
      zIndex: 3333,
      placeholderText: 'Type here....'
    })


  #dataSetsAnchor.mb-3
  #dataSets.card
    .card-body
      .font-weight-bold.mb-1
        DATA SETS:
      .list
        -@factoid_request.data_sets.each do |ds|
          .row.mb-2.align-items-center{ class: "data-set-#{ds.id}"}
            .col-1.text-right
              =f.check_box "factoid_request[tf_data_set__#{ds.id}]", checked: true
            .col-11.pl-0.text-left
              =f.label "factoid_request[tf_data_set__#{ds.id}]", ds.name, class: 'm-0'
      .data-sets
        %input.w-50.form-control.form-control-sm{ list: 'dataSetList', onkeypress: 'addDataSet(event, this)' }
        %datalist#dataSetList
          -DataSet.order(:name).each do |ds|
            %option{ value: ds.name, data_set_id: ds.id }
        .small.text-secondary
          *** after typing or selecting press enter
    :javascript
      function addDataSet(event, input) {
        if(event.keyCode !== 13 || input.value.trim().length === 0) return false;
        let dataSetName = input.value;
        let option = [...document.querySelectorAll('#dataSetList option')].find((el) => el.getAttribute('value') === dataSetName )
        if(!option) return false;
        input.value = '';
        document.querySelector('#dataSets .list').insertAdjacentHTML(
          'beforeend',
          `<div class="row mb-2 align-items-center data-set-${option.getAttribute('data_set_id')}">
            <div class="col-1 text-right">
              <input name="factoid_request[tf_data_set__${option.getAttribute('data_set_id')}]" type="hidden" value="0">
              <input type="checkbox" value="1" name="factoid_request[tf_data_set__${option.getAttribute('data_set_id')}]" id="factoid_request[tf_data_set__${option.getAttribute('data_set_id')}]" checked>
            </div>
            <div class="col-11 pl-0 text-left">
              <label class="m-0" for="factoid_request[tf_data_set__${option.getAttribute('data_set_id')}]">${dataSetName}</label>
            </div>
          </div>`
        )
        option.remove();
      }

  #frequenciesAnchor.mb-3
  #frequencies.card
    .card-body
      .font-weight-bold.mb-1
        FREQUENCY:
      .frequency
        =f.collection_select 'factoid_request[frequency_id]', Frequency.all, :id, :name,
                             { include_blank: '', selected: @factoid_request.frequency&.id },
                             { class: 'w-50 form-control form-control-sm' }

  #googleDocSheetLinkAnchor.mb-3
  #googleDocSheetLink.card
    .card-body
      .font-weight-bold.mb-1
        GOOGLE DOCUMENT/SPREADSHEET:
        %span.small.text-danger
          ***link to Google Doc or Spreadsheet
      .google-doc-sheet-link
        =f.text_field "factoid_request[google_doc_sheet_link]", class: 'form-control form-control-sm',
                      value: @factoid_request.google_doc_sheet_link

  #priorityAnchor.mb-3
  #priority.card
    .card-body
      .font-weight-bold.mb-1
        PRIORITY:
        %span.small.text-danger
          *required
      .priorities
        -Priority.all.each do |pr|
          .row.mb-1.align-items-center{ class: "revenue-type-#{pr.id}"}
            .col-1.text-right
              =f.radio_button "factoid_request[priority_id]", pr.id, checked: @factoid_request.priority.eql?(pr)
            .col-11.pl-0.text-left
              =f.label "factoid_request[priority_id]", pr.name, value: pr.id, class: 'm-0'

    =f.submit 'Submit', id: 'hiddenUpdateButton', class: 'd-none'

  :javascript
    document.querySelector('#updateFactoidRequestModal form').addEventListener('submit', onSubmit)

    function onSubmit(event) {
      event.preventDefault();
      event.stopPropagation();

      let sections = `#name, #priority, #googleDocSheetLink`
      let cards = document.querySelectorAll(sections);
      [...cards].forEach((el) => { el.classList.replace('border-danger', 'border-0') })

      let name = document.querySelector('#name input').value.length > 0
      if(!name) {
        scrollToCard('#name')
        return false;
      }

      let googleLink = document.querySelector('#googleDocSheetLink input').value
      if(googleLink.length > 0 && !googleLink.match(/^https:\/\/docs.google.com\/(document|spreadsheets)/)) {
        scrollToCard('#googleDocSheetLink')
        return false;
      }

      let priority = [...document.querySelectorAll('#priority input[type="radio"]')].some((el) => { return el.checked; } );
      if(!priority) {
        scrollToCard('#priority')
        return false;
      }

      event.target.submit();
    }

    document.querySelector('#updateFactoidRequestModal .modal-body').addEventListener('scroll', () => {
      [...document.querySelectorAll('input[list]')].forEach(el => { el.blur();  })
    }, false)

    function scrollToCard(id) {
      let required = document.querySelector(id);

      required.addEventListener('animationend', (ev) => { ev.target.classList.remove('touch-required-field') })
      document.querySelector(id).classList.replace('border-0', 'border-danger')
      document.querySelector(id).classList.add('border-danger', 'touch-required-field')
      document.querySelector(`${id}Anchor`).scrollIntoView();
    }
