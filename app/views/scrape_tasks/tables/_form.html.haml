=form_with(url: scrape_task_tables_path(@scrape_task)) do |tf|
  =tf.collection_select 'tables[host]',  Host.select(:id, :name), :id, :name, { prompt: '' }, { class: 'form-control form-control-sm mb-1', onchange: 'loadSchemas(this)' }
  =tf.collection_select 'tables[schema]', [], :id, :name, { prompt: '' }, { class: 'form-control form-control-sm', onchange: 'loadTables(this)' }
  =tf.collection_select 'tables[names]', [], :id, :name, {}, { class: 'form-control form-control-sm mt-1', multiple: 'multiple' }
  =tf.submit :add, class: 'mt-2'
  .loadingSpinner.d-inline-block.ml-1.invisible
    .spinner-border.spinner-border-sm.text-secondary
      %span.sr-only
%hr/

:javascript
  $('select[id="tables[host]"]').multipleSelect({
    maxHeight: '14',
    maxHeightUnit: 'row',
    placeholder: 'host',
    onAfterCreate: () => {
      $('.hide-radio.selected').addClass('invisible');
    }
  });

  $('select[id="tables[schema]"]').multipleSelect({
    filter: true,
    maxHeight: '14',
    maxHeightUnit: 'row',
    placeholder: 'schema',
    onAfterCreate: () => {
      $('.hide-radio.selected').addClass('invisible');
    }
  });

  $('select[id="tables[names]"]').multipleSelect({
    filter: true,
    maxHeight: '7',
    maxHeightUnit: 'row',
    placeholder: 'names',
    onAfterCreate: () => {
      $('.hide-radio.selected').addClass('invisible');
    }
  });


  // $('.hide-radio.selected').addClass('invisible');

  function loadSchemas(host) {
    let spinner = document.querySelector('#addTables .loadingSpinner');
    let schema = document.querySelector('select[id="tables[schema]"]');
    let tableNames = document.querySelector('select[id="tables[names]"]');

    spinner.classList.remove('invisible');
    schema.options.length = 0;
    tableNames.options.length = 0;

    $('select[id="tables[schema]"]').multipleSelect('refresh');
    $('select[id="tables[names]').multipleSelect('refresh');

    if(host.value === '') return false;

    Rails.ajax({
      type: "GET",
      dataType: 'json',
      url: `#{api_scrape_tasks_schemas_path(@scrape_task)}`,
      data: `host=${encodeURIComponent(host.value)}`,
      success: (data) => {
        let option = document.createElement("option");

        schema.innerHTML = '';
        schema.appendChild(option);

        data['schemas'].forEach((item) => {
          option = document.createElement("option");
          option.setAttribute("value", item['id']);
          option.text = item['name'];
          schema.appendChild(option)
        });

        spinner.classList.add('invisible');
        $('select[id="tables[schema]"]').multipleSelect('refresh');
      }
    });
  }

  function loadTables(schema) {
    let spinner = document.querySelector('#addTables .loadingSpinner');
    let host = document.querySelector('select[id="tables[host]"]');
    let tableNames = document.querySelector('select[id="tables[names]"]');

    spinner.classList.remove('invisible');
    tableNames.options.length = 0;
    $('select[id="tables[names]"]').multipleSelect('refresh');

    if(schema.value === '') return false;

    Rails.ajax({
      type: "GET",
      dataType: 'json',
      url: `#{api_scrape_tasks_table_names_path(@scrape_task)}`,
      data: `host=${encodeURIComponent(host.value)}&schema=${encodeURIComponent(schema.value)}`,
      success: (data) => {
        console.log(data['table_names'])
        data['table_names'].forEach((item) => {
          let option = document.createElement("option");
          option.setAttribute("value", item);
          option.text = item;
          tableNames.appendChild(option)
        });

        spinner.classList.add('invisible');
        $('select[id="tables[names]"]').multipleSelect('refresh');
      }
    });
  }
