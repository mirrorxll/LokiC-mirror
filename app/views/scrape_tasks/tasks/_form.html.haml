-attached_tasks = @scrape_task.tasks

%input.underline-input.w-100.p-0{ list: 'tasks', onkeypress: 'taskByEnterPress(event, this)' }
%datalist#tasks
  -tasks = (attached_tasks.present? ? Task.where("id NOT IN (#{attached_tasks.ids.join(',')}) AND parent_task_id is null") : Task.where(parent: nil))
  -tasks.each do |t|
    %option{ value: t.subtask? ? "--> ##{t.id} #{t.title}" : "##{t.id} #{t.title}" }

:javascript
  function taskByEnterPress(event, input) {
    if(event.keyCode !== 13 || input.value.trim().length === 0) return false;

    Rails.ajax({
      type: "POST",
      dataType: 'script',
      url: `#{api_scrape_tasks_tasks_path(@scrape_task)}`,
      data: `task_title=${encodeURIComponent(input.value.replace(/#\d+\s/, ''))}`,
      success: (data) => {
        if(data['exist']) return false;

        let tasks = document.querySelector('#includedTasks');

        tasks.insertAdjacentHTML(
          'beforeend',
          `<div class="task-${data['id']}">
             <a onclick="excludeTaskFromScrapeTask(event, ${data['id']});" href="#">
               [ remove ]
             </a>
             &nbsp;&nbsp;|&nbsp;&nbsp;
             <a rel="noopener noreferrer" href="/tasks/${data['id']}">
               \#${data['id']} ${data['name']}
             </a>
             <br/>
          </div>`
        );

        if(tasks.innerText.trim() === '') {
          tasks.classList.remove('mb-2');
        } else {
          tasks.classList.add('mb-2');
        }

        input.value = '';
      }
    });
  }
