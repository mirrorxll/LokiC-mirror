.col-12
  .ml-3.mb-2.text-danger
    ***if you update columns list, will drop 'story per publication' index and you will need to recreate it.
  .ml-3
    =form_with(model: [@story_type, @staging_table, @staging_table.columns], method: :put) do |form|
      #add-column.mb-2
        =icon('fas', 'plus')
      %div#columns-editable
        -@staging_table.columns.list.each do |hex, column|
          %div{ id: "col_#{hex}", class: 'mb-1' }
            %div.remove_column.d-inline-block.mr-1{ id: "rm_col_#{hex}", onclick: 'removeColumn(this)' }
              =icon('fas', 'minus')
            =form.text_field "#{hex}[name]",
                             { value: column[:name], placeholder: 'name', id: "columns_#{hex}_name" }
            =form.select "#{hex}[type]",options_for_select(data_types, column[:type]), {},
                         { class: 'h_25px', id: "columns_#{hex}_type", onchange: 'optionsForColumnType(this)' }
            .d-inline-block
              -if %i[string text integer float].include?(column[:type])
                =form.text_field "#{hex}[options[limit]]", { class: 'w_80px', value: column[:options][:limit], placeholder: 'limit', id: "columns_#{hex}_params_limit" }
              -elsif %i[decimal datetime time].include?(column[:type])
                =form.text_field "#{hex}[options[precision]]", { class: 'w_80px', value: column[:options][:precision], placeholder: 'precision', id: "columns_#{hex}_params_precision"}
              -if column[:type].eql?(:decimal)
                =form.text_field "#{hex}[options[scale]]", { class: 'w_80px', value: column[:options][:scale], placeholder: 'scale', id: "columns_#{hex}_params_scale" }
      =form.submit :update, class: 'mt-3 ml-3'
      =link_to('cancel', section_story_type_staging_tables_path(@story_type), class: 'ml-3', remote: true)

:javascript
  var editable_block = $('#columns-editable');
  $('#add-column').click(function () {
    let hex = secureRandom(6);

    $(editable_block).append(
        `<div id="col_${hex}" class="mb-1">
            <div class=" remove_column d-inline-block mr-1" id="rm_col_${hex}" onclick="removeColumn(this)"><i class="fas fa-minus"></i></div>
            <input placeholder="name" id="columns_${hex}_name" required="required" type="text" name="columns[${hex}[name]]">
            <select class="h_25px" id="columns_${hex}_type" onchange="optionsForColumnType(this)" name="columns[${hex}[type]]">
                <option value="string">string</option>
                <option value="text">text</option>
                <option value="integer">integer</option>
                <option value="float">float</option>
                <option value="decimal">decimal</option>
                <option value="datetime">datetime</option>
                <option value="timestamp">timestamp</option>
                <option value="time">time</option>
                <option value="date">date</option>
                <option value="boolean">boolean</option></select>
            </select>
            <div class="d-inline-block">
                <input class="w_80px" placeholder="limit"
                       id="columns_${hex}_params_limit" type="text"
                       name="columns[${hex}[options[limit]]]">
            </div>
        </div>`
    );
  });

  function secureRandom(n){
    let result = '';
    while (n--){
      result += Math.floor(Math.random()*16).toString(16);
    }

    return result;
  }

  function removeColumn(elem) {
    $(elem.parentNode).remove();
  }

  function optionsForColumnType(elem) {
    let parent = elem.parentNode;
    let hex = parent.id.split('_')[1]
    while (parent.childElementCount > 3)
      $(elem).next().remove();

    switch (elem.options[elem.selectedIndex].value) {
      case 'string':
      case 'text':
      case 'integer':
      case 'float':
        $(parent).append(`
          <input class="w_80px" placeholder="limit" type="text"
            name="columns[${hex}[options[limit]]]" id="columns_${hex}_params_limit">
        `);
        break;
      case 'decimal':
        $(parent).append(`
          <input class="w_80px" placeholder="precision" type="text"
            name="columns[${hex}[options[precision]]]" id="columns_${hex}_params_precision">
          <input class="w_80px" placeholder="scale" type="text"
            name="columns[${hex}[options[scale]]]" id="columns_${hex}_params_scale">`);
        break;
      case 'datetime':
      case 'time':
        $(parent).append(`
          <input class="w_80px" placeholder="precision" type="text"
            name="columns[${hex}[options[precision]]]" id="columns_${hex}_params_precision">`);
        break;
    }
  }
