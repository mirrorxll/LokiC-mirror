-samples = @iteration.samples.where(backdated: false)
-exported = samples.where.not("pl_#{PL_TARGET}_story_id".to_sym => nil).count
-ready_to_export = samples.where("pl_#{PL_TARGET}_story_id".to_sym => nil).count

.small
  -if !@story_type.iteration.eql?(@iteration)
    .row
      .col-10.offset-1
        total exported: #{exported} / #{samples.count}

  -elsif @story_type.staging_table && @iteration.creation && @iteration.schedule

    -if @iteration.export.eql?(true)
      .row
        .col-10.offset-1
          total exported: #{exported} / #{samples.count}
      .row
        .col-10.offset-1
          -if exported < samples.count
            =link_to('extra export!', export_story_type_iteration_exports_path(@story_type, @iteration),
                     class: 'mt-3 btn btn-sm btn-outline-dark',
                     method: :post, remote: true)

    -elsif @iteration.export.eql?(false)
      =render 'story_types/spinner', description: 'export in progress'
    -else
      .row.mb-2
        .col-10.offset-1
          ready to export: #{ready_to_export}
      .row
        .col-10.offset-1
          =link_to('export!', export_story_type_iteration_exports_path(@story_type, @iteration),
                   class: 'mt-3 btn btn-sm btn-outline-dark',
                   method: :post, remote: true)
