=form_with(url: multi_tasks_path, id: 'newTaskParent',  html: { onkeypress: "return event.keyCode !== 13;" }, class: 'p-3 w-100', subtaskCount: 0 ) do |form|
  .row.small
    .form-group
      =form.text_field 'task_parent[title]', placeholder: 'main task title', id: 'newTaskNameParent', class: 'form-control form-control-sm', required: true, maxlength: 500
      #newTaskNameParentFeedback.text-danger.text-center.d-none
        Task with this title already created by you. Let's use something else
  .row.small.font-weight-bold
    .col-3.border-right
      .row.justify-content-between
        .col
          assignment to:
        .col
          .row.small
            =form.collection_select 'task_parent[assignment_to]', Account.all.order([:first_name, :last_name]), :id, :name, { prompt: '' }, style: "width:130px"
      %hr
      .row.justify-content-between
        .col
          assistants:
          =icon('fa', 'plus', class: 'ml-2', id: 'addAssistantParent')
        .col#assistantsParentForm
      %hr
      .row.justify-content-between
        .col
          notifications to:
          =icon('fa', 'plus', class: 'ml-2', id: 'addNotificationsToParent')
        .col#notificationsToParentForm
    .col-9
      .row
        .col-6
          .row.mb-2
            .col-5
              reminder frequency:
            .col.text-left.small
              =form.collection_select 'task_parent[reminder_frequency]', sorted_reminder_frequencies, :id, :name, { prompt: '' }
          .row.mb-2
            .col-5
              client:
            .col.text-left.small
              =form.collection_select 'task_parent[client_id]', ClientsReport.all.order(:name), :id, :name, { prompt: '' }, style: "width:150px"
          .row.mb-2.font-weight-normal
            .col.text-left
              =link_to('[ checklists ]', nil, onclick: "showChecklistsParent(event)")
            .col.text-left
        .col-6
          .row.mb-2
            .col-7.text-right
              deadline:
            .col.text-left.small
              =form.date_field 'task_parent[deadline]', type: :datetime
          :javascript
            $('input[id="task_parent[deadline]"]').datepicker({
              format: 'yyyy-mm-dd'
            });
          .row.mb-2
            .col-7.text-right
              access to task and its subtasks:
            .col.text-left
              =form.check_box 'task_parent[access]', class: 'form-check-input ml-0', checked: true
          .row
            .col-7.text-right
              main task:
            .col.text-left.small
              =form.collection_select 'task_parent[parent]', Task.where(parent: nil).where.not(status: Status.find_by(name: 'deleted')).order(:id), :id, :title_with_id, { prompt: '' }, style: "width:150px", onchange: "hideSubtasks(this);"
          .row.small.justify-content-center
            (If you select a main task, you won't be able to add subtasks)
      %hr
      .row.font-weight-bold
        .col
          .row.mb-2.mt-2
            .col-2
              sow:
            .col.small
              =form.text_field 'task_parent[sow]', placeholder: 'link to google sheet', maxlength: 255, style: "width:95%"
          .row.mb-2
            .col-2
              pivotal tracker:
            .col.small
              =form.text_field 'task_parent[pivotal_tracker_name]', placeholder: 'name', maxlength: 255, style: "width:95%"
          .row.mb-2
            .col-2
              pivotal tracker link:
            .col.small
              =form.text_field 'task_parent[pivotal_tracker_url]', placeholder: 'link', maxlength: 255, style: "width:95%"
      %hr
      .row
        .col.font-weight-normal.mb-2
          =link_to '[ add agency/opportunity/revenue_type ]', '#' , class: 'add_agency', id: 'add_agency_task_parent'
      .row
        .col
          #agency_opportunity_revenue_types_task_parent
          #agenciesPercentsFeedback.text-danger.text-center.font-weight-normal.d-none
            Total of percents must be 100

  #checklistsParent.accordion.mt-2.d-none
    .card.small
      .card-header.p-1
        %div.row
          .col-1
            =icon('fa', 'plus', id: 'addÐ¡hecklistParent')
          .col-11.text-right
            %div{"aria-controls" => "#checklistsParentCollapse", "aria-expanded" => "true", "data-target" => "#checklistsParentCollapse", "data-toggle" => "collapse", type: "button"}
              checklists
      #checklistsParentCollapse.collapse{"data-parent" => "#checklistsParent", class: 'show'}
        .row.mt-2.mb-2
          .col#forms_checklists_parent
  .row.small.mt-2
    .form-group
      =form.text_area 'task_parent[description]', id: 'task_description'

  #formsSubtasks.accordion.justify-content-center

  .row.small.font-weight-bold.justify-content-center.mb-2.mt-2#addSubtaskLink
    =link_to '[ add subtask ]', nil, onclick: 'addSubtask(event);'

  =form.submit :create, id: 'hiddenCreateButton', class: 'd-none'



=render 'multi_tasks/agencies_opportunities/form', task: 'task_parent'

:javascript
  $('#task_description').froalaEditor({
      key: 'KfdolbcqsaA2wzA-13==',
      toolbarButtons: ['fullscreen', 'undo', 'redo', '|', 'bold', 'italic', 'underline', 'strikeThrough', 'subscript', 'superscript', '|', 'fontFamily', 'fontSize', 'color', 'inlineClass', 'inlineStyle', 'paragraphStyle', 'lineHeight', '|', 'paragraphFormat', 'align', 'formatOL', 'formatUL', 'outdent', 'indent', 'quote', 'insertLink', 'insertImage', 'insertTable', '|', 'emoticons', 'specialCharacters', 'insertHR', 'selectAll', 'clearFormatting', '|', 'print', 'getPDF', 'help', 'html'],
      imageUploadURL: '/images/upload',
      imageUploadMethod: 'POST',
      height: 300
  });

  var accounts = #{raw Account.all.order([:first_name, :last_name]).map{ |account| [account.first_name.to_s + ' ' + account.last_name.to_s, account.id]} };
  var current_account_id = #{raw current_account.id}

  function hideSubtasks(elem) {
    let divSubtasks = document.querySelector('#formsSubtasks');
    let linkAddSubtask = document.querySelector('#addSubtaskLink');
    let subtasksTitles = document.getElementsByClassName('subtaskTitle');

    if(elem.value === '') {
      divSubtasks.classList.remove('d-none');
      linkAddSubtask.classList.remove('d-none');
      for (let subtaskTitle of subtasksTitles) {
        subtaskTitle.required = true;
      }

    } else {
      divSubtasks.classList.add('d-none');
      linkAddSubtask.classList.add('d-none');
      for (let subtaskTitle of subtasksTitles) {
        subtaskTitle.required = false;
      }
    }
  }

  function addSubtask(e) {
    e.preventDefault();

    newTaskParent = document.getElementById('newTaskParent')
    let countSubtask = newTaskParent.getAttribute('subtaskCount');
    let newCountSubtask = Number(countSubtask) + 1;
    newTaskParent.setAttribute('subtaskCount', newCountSubtask)

    Rails.ajax({
        type: "GET",
        dataType: 'script',
        url: `#{add_subtask_multi_tasks_path}`,
        data: `number_subtask=${newCountSubtask}`
    })

  }

  $('#addAssistantParent').click(function () {
    let hex = secureRandom(6);

    $('#assistantsParentForm').append(
        `<div id="assistant_${hex}" class="row small mt-1 mb-1" >
           <select id="task_parent[assistants][]" style = "width:130px" class="mr-1" name="task_parent[assistants][]">${buildSelect(accounts)}</select>
           <div class="ml-1" id="rm_assistant_${hex}" onclick="removeDate(this)"><i class="fa fa-minus"></i></div>
         </div>`
    );
  });

  $('#addNotificationsToParent').click(function () {
    let hex = secureRandom(6);

    $('#notificationsToParentForm').append(
        `<div id="assistant_${hex}" class="row small mt-1 mb-1" >
           <select id="task_parent[notification_to][]" style = "width:130px" class="mr-1" name="task_parent[notification_to][]">${buildSelect(accounts)}</select>
           <div class="ml-1" id="rm_notification_${hex}" onclick="removeDate(this)"><i class="fa fa-minus"></i></div>
         </div>`
    );
  });

  function buildSelect(options) {
    var $select = $('');
    $select += ('<option value="' + '' + '">' + '' + '</option>');
    for (var i = 0; i < options.length; i++) {
      $select += ('<option value="' + options[i][1] + '">' + options[i][0] + '</option>');
    }
    return $select;
  }

  function removeDate(elem) {
    $(elem.parentNode).remove();
  }

  function secureRandom(n) {
    let result = '';
    while (n--){
      result += Math.floor(Math.random() * 16).toString(16);
    }
    return result;
  }

  $('#task').on('hidden.bs.modal', function () {
    $('#task .modal-body').empty();
  });

  function delay(fn, ms) {
    let timer = 0;
    return function(...args) {
      clearTimeout(timer);
      timer = setTimeout(fn.bind(this, ...args), ms || 0)
    }
  }

  function isUniq(name, names) {
    let lowName = name.toLowerCase();
    return !names.find(el => lowName === el.toLowerCase());
  }

  document.querySelector('#newTaskParent').addEventListener('input', delay(() => {
    let percentInputs = document.getElementsByClassName('agencies_percents');
    let percentFeedback = document.querySelector('#agenciesPercentsFeedback');

    for (let i = 0; i < percentInputs.length; i++) {
      percentInputs[i].classList.remove('border', 'border-danger');
    }
    percentFeedback.classList.add('d-none');

    Rails.ajax({
      type: 'GET',
      dataType: 'json',
      url: `#{root_url}api/tasks/titles`,
      data: `creator_id=${current_account_id}`,
      success: (names) => {
        let nameInput = document.querySelector('#newTaskNameParent');
        let nameFeedback = document.querySelector('#newTaskNameParentFeedback');
        let submitButton = document.querySelector('#newTaskParent input[type="submit"]');
        let nameIsUniq = isUniq(nameInput.value, names);

        if(nameIsUniq === true) {
          nameInput.classList.remove('border', 'border-danger');
          nameFeedback.classList.add('d-none');
          submitButton.disabled = false;
        } else {
          nameInput.classList.add('border', 'border-danger');
          nameFeedback.classList.remove('d-none');
          submitButton.disabled = true;
        }
      }
    })
  }, 500));

  function onSubmit(ev) {
    ev.preventDefault();
    ev.stopPropagation();

    let form = ev.target;
    let nameInput = document.querySelector('#newTaskNameParent');
    let nameFeedback = document.querySelector('#newTaskNameParentFeedback');
    let submitButton = document.querySelector('#newTaskParent input[type="submit"]');

    let percentInputs = document.getElementsByClassName('agencies_percents');
    let percentFeedback = document.querySelector('#agenciesPercentsFeedback');

    let sum = 0;
    for (var i = 0; i < percentInputs.length; i++) {
      sum += parseFloat(percentInputs[i].value)
    }

    if(Math.round(sum) === 100 || percentInputs.length === 0) {
    }
    else
    {
      for (let i = 0; i < percentInputs.length; i++) {
        percentInputs[i].classList.add('border', 'border-danger');
      }
      percentFeedback.classList.remove('d-none');
      return;
    }

    Rails.ajax({
      type: 'GET',
      dataType: 'json',
      url: `#{root_url}api/tasks/titles`,
      data: `creator_id=${current_account_id}`,
      success: (names) => {
        let nameIsUniq = isUniq(nameInput.value, names);

        if(nameIsUniq) {
          form.removeEventListener('submit', onSubmit)
          Rails.fire(form, 'submit')
        } else {
          nameInput.classList.add('border', 'border-danger');
          nameFeedback.classList.remove('d-none');
          submitButton.disabled = true;
        }
      }
    })
  }
  document.querySelector('#newTaskParent').addEventListener('submit', onSubmit)

  $('#addÐ¡hecklistParent').click(function () {
    let hex = secureRandom(6);

    $('#forms_checklists_parent').append(
        `<div id="checklist_${hex}" class="row small justify-content-center mt-2">
           <div class="small mt-1 mr-2"><i class="fa fa-circle"></i></div>
           <input id="task_parent[checklists][]" style='width: 90%' required=required maxlength="255" name="task_parent[checklists][]"></input>
           <div class="ml-2" id="rm_checklist_${hex}" onclick="removeDate(this)"><i class="fa fa-minus"></i></div>
         </div>`
    );
  });

  function showChecklistsParent(e) {
    e.preventDefault();

    let divChecklists = document.querySelector(`#checklistsParent`);

    if(divChecklists.classList.contains('d-none')){
      divChecklists.classList.remove('d-none');
    } else {
     divChecklists.classList.add('d-none');
    }
  };

