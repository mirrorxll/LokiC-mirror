:javascript
  var editable_block = $('#columns-editable');
  $('#add-column').click(function () {
    let count = editable_block.children().length + 1;

    $(editable_block).append(
        `<div id="col_${count}">
            <div id="rm_col_${count}" class="d-inline-block" onclick="removeColumnAndSaveEnum(this)">-</div>
            <input type="text" name="staging_table[${count}[name]]" id="staging_table_${count}_name" required>
            <select name="staging_table[${count}[type]]" id="staging_table_${count}_type" onchange="optionsForColumnType(this)">
                <option value="smallint">smallint</option>
                <option value="mediumint">mediumint</option>
                <option value="integer">integer</option>
                <option value="bigint">bigint</option>
                <option value="float">float</option>
                <option value="decimal">decimal</option>
                <option value="date">date</option>
                <option value="time">time</option>
                <option value="datetime">datetime</option>
                <option value="string">string</option>
                <option value="text">text</option>
                <option value="boolean">boolean</option>
            </select>
        </div>`
    );
  });

  $('div[id^="rm_col"]').each(function() {
    $(this).click('removeColumnAndSaveEnum(this)')
  });

  $('select[id$="type"]').each(function() {
    $(this).click('optionsForColumnType(this)')
  });

  function removeColumnAndSaveEnum(elem) {
    $(elem.parentNode).remove();
    editable_block.children().each(function(index, el) {
        index++;
        $(el).attr({id: `col_${index}`});
        $(el).find('[id^="rm_col_"]').attr({id: `rm_col_${index}`});
        $(el).find('[id$="name"]').attr({name: `staging_table[${index}[name]]`, id: `staging_table_${index}_name`});
        $(el).find('[id$="type"]').attr({name: `staging_table[${index}[type]]`, id: `staging_table_${index}_type`});
        $(el).find('[id$="limit"]').attr({name: `staging_table[${index}[opts[limit]]]`, id: `staging_table_${index}_opts_limit`});
        $(el).find('[id$="precision"]').attr({name: `staging_table[${index}[opts[precision]]]`, id: `staging_table_${index}_opts_precision`});
        $(el).find('[id$="scale"]').attr({name: `staging_table[${index}[opts[scale]]]`, id: `staging_table_${index}_opts_scale`});
    });
  }

  function optionsForColumnType(elem) {
    let count = elem.selectedIndex + 1;
    let parent = elem.parentNode;

    while (parent.childElementCount > 3)
      $(elem).next().remove();

    switch (elem.options[elem.selectedIndex].value) {
      case 'decimal':
        $(parent).append(`
          <input placeholder="precision" type="text"
            name="staging_table[${count}[opts[precision]]]" id="staging_table_${count}_opts_precision">
          <input placeholder="scale" type="text"
            name="staging_table[${count}[opts[scale]]]" id="staging_table_${count}_opts_scale">`);
        break;
      case 'string':
        $(parent).append(`
          <input placeholder="limit" type="text"
            name="staging_table[${count}[opts[limit]]]" id="staging_table_${count}_opts_limit">
        `);
        break;
    }
  }
