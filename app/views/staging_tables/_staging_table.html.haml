.row
  .col-10.offset-1
    .row
      .col-12
        %p #{@story_type.reload.staging_table.name}
    .row#staging_table_main_control
      .col-1
        #sync.btn-group
          =link_to('sync', sync_story_type_staging_table_path(@story_type, @story_type.staging_table),
                    class: 'btn btn-sm btn-outline-dark', method: :put, remote: true)
      .col-6
        #manipulate.btn-group.ml-2
          =link_to('purge last population', story_type_population_path(@story_type, @story_type.staging_table),
                    class: 'btn btn-sm btn-outline-danger', method: :delete,  remote: true,
                    data: { confirm: 'You sure?' })
          =link_to('truncate', truncate_story_type_staging_table_path(@story_type, @story_type.staging_table),
                    class: 'btn btn-sm btn-outline-danger', method: :delete,  remote: true,
                    data: { confirm: 'You sure?' })
          =link_to('detach', detach_story_type_staging_table_path(@story_type, @story_type.staging_table),
                    class: 'btn btn-sm btn-outline-danger', method: :delete, remote: true,
                    data: { confirm: 'You sure?' })
          =link_to('drop', story_type_staging_table_path(@story_type, @story_type.staging_table),
                    class: 'btn btn-sm btn-outline-danger', method: :delete, remote: true,
                    data: { confirm: 'You sure?' })
      .col-5.text-right
        #exec_population
          -if @story_type.code.attached?
            -if @story_type.iteration.population.nil?
              =render 'populations/form'
            -elsif @story_type.iteration.population.eql?(false)
              #population_in_progress.text-danger
                population in progress...
            -else
              #population_status
                population success
    %hr/
    %ul#staging_table_tabs.small.nav.nav-tabs{:role => "tablist"}
      %li.w-50.text-center.nav-item
        %a#columns-tab.nav-link.active{"aria-controls" => "columns", "aria-selected" => "true", "data-toggle" => "tab", :href => "#columns", :role => "tab"}
          Columns
      %li.w-50.text-center.nav-item
        %a#index-tab.nav-link{"aria-controls" => "index", "aria-selected" => "false", "data-toggle" => "tab", :href => "#index", :role => "tab"}
          Index
    #staging_table_content.tab-content
      #columns.tab-pane.fade.show.active{"aria-labelledby" => "columns-tab", :role => "tabpanel"}
        %hr.mt-0/
        #edit_columns.btn-group.mb-2
          =link_to('edit column list',
                   edit_story_type_staging_table_columns_path(@story_type, @story_type.staging_table, @story_type.staging_table.columns),
                   class: 'btn btn-sm btn-outline-dark', remote: true)
        %br
        .row
          .col-6.small name
          .col-6.small{ style: 'padding-left: 5px;'} type
        -columns = @story_type.staging_table.columns.list
        %table.mt-2.table.table-sm
          %tbody
            -columns.each do |_id, col|
              %tr
                %td #{col[:name]}
                %td #{col[:type]} #{col[:opts].values.all?(nil) ? '' : "(#{col[:opts].values.compact.join(',')})"}
      #index.tab-pane.fade{"aria-labelledby" => "index-tab", :role => "tabpanel"}
        %hr.mt-0/
        #edit_index.btn-group.mb-2
          -if @story_type.staging_table.index.list.empty?
            =link_to("add unique 'story per publication' index",
                     new_story_type_staging_table_index_path(@story_type, @story_type.staging_table),
                     class: "btn btn-sm btn-outline-dark #{columns.empty? ? 'disabled': ''}", remote: true)
          -else
            =link_to("drop unique 'story per publication' index",
                     story_type_staging_table_index_path(@story_type, @story_type.staging_table, @story_type.staging_table.index),
                     class: 'btn btn-sm btn-outline-dark', method: :delete, remote: true)
        %p #{@story_type.staging_table.index.list.join(', ')}

=render 'populations/block_manipulate_buttons'
