-if @iteration.schedule
  -stories = @iteration.stories.where(backdated: false)
  -exported = stories.where.not("pl_#{PL_TARGET}_story_id".to_sym => nil).count
  -ready_to_export = stories.where("pl_#{PL_TARGET}_story_id".to_sym => nil).count

  -if !@story_type.iteration.eql?(@iteration)
    .row.border-top.mt-3.ml-0.mr-0.pt-3
      .col-10.offset-1
        total exported: #{exported} / #{stories.count}
  -elsif @story_type.staging_table && @iteration.creation && @iteration.schedule
    -if @iteration.export.eql?(true) && !@iteration.purge_export.eql?(true)
      .row.border-top.mt-3.ml-0.mr-0.pt-3
        .col-10.offset-1
          total exported: #{exported} / #{stories.count}
      .row
        .col-10.offset-1
          -if exported < stories.count
            =link_to('extra export!', execute_story_type_iteration_exports_path(@story_type, @iteration),
                     class: 'mt-3 btn btn-sm btn-outline-dark', method: :post, remote: true)
          =link_to('exported stories', stories_story_type_iteration_exports_url(@story_type, @iteration),
                   class: 'd-inline-block mr-3 mt-3 btn btn-sm btn-outline-dark', target: '_blank')
      =render 'story_types/exports/remove_exported_stories_section'
    -elsif @iteration.export.eql?(false)
      =render 'story_types/main/spinner', description: 'export in progress'
    -elsif @iteration.purge_export.eql?(true)
      =render 'story_types/main/spinner', description: 'removing from PL in progress'
    -else
      .row.border-top.mt-3.ml-0.mr-0.pt-3.text-center
        .col-10.offset-1
          ready to export: #{ready_to_export}
      .row
        .col-10.offset-1
          =link_to('export!', execute_story_type_iteration_exports_path(@story_type, @iteration),
                   class: 'mt-3 mr-3 btn btn-sm btn-outline-dark', method: :post, remote: true)
      =render 'story_types/exports/remove_exported_stories_section'
