-if @story_type.staging_table_attached.eql?(false)
  =render 'story_types/spinner', description: 'staging table attaching in progress'
-elsif @story_type.staging_table_attached.nil?
  =render 'story_types/staging_tables/form'
-elsif @story_type.staging_table.columns_modifying.eql?(true)
  =render 'story_types/spinner', description: 'staging table modifying in progress'
-elsif @story_type.staging_table.indices_modifying.eql?(true)
  =render 'story_types/spinner', description: 'staging table modifying in progress'
-elsif @iteration.population.eql?(false)
  =render 'story_types/spinner', description: 'population in progress'
  .text-center.mt-3
    =link_to("cancel the job", story_type_sidekiq_breaks_path(@story_type),
             class: 'btn btn-sm btn-outline-danger', method: :post, remote: true)
-else
  -staging_table = @story_type.staging_table
  -columns = staging_table.columns.list
  -uniq_index = staging_table.index.list
  .row.small
    .col-10.offset-1
      .row#staging_table_name
        .col-12
          %p
            =staging_table.name
            -if staging_table.old_name
              =icon('fa', 'inbox', class: 'ml-2', 'data-container' => 'body', 'data-toggle' => 'popover',
                    'data-placement' => 'right', 'data-content' => "old name -> #{staging_table.old_name}")

      -if @iteration.eql?(@story_type.iteration) && correct_account?(@story_type)
        .row#staging_table_control
          .col-1#sync
            .btn-group
              =link_to('sync', sync_story_type_staging_table_path(@story_type, staging_table),
                        class: 'btn btn-sm btn-outline-dark', method: :patch, remote: true)
          .col-6#manipulate
            .btn-group
              -if @iteration.population.eql?(true) && !@iteration.schedule.eql?(true)
                =link_to('purge current iteration', purge_story_type_iteration_path(@story_type, @iteration),
                          class: 'btn btn-sm btn-outline-danger', method: :delete,  remote: true,
                          data: { confirm: 'PURGE CURRENT ITERATION: You sure?' })
          .col-5.text-right#exec_population
            =render 'story_types/populations/form'
        %hr/
        .row#columns__index
          .col-12
            .btn-group.mb-2
              #edit_columns
                =link_to('edit column list',
                         edit_story_type_staging_table_columns_path(@story_type, staging_table, staging_table.columns),
                         class: 'btn btn-sm btn-outline-dark', remote: true)
              #edit_index.mb-2.ml-2
                -if staging_table.index.list.empty?
                  =link_to("add unique 'story per publication' index",
                           new_story_type_staging_table_index_path(@story_type, staging_table),
                           class: "btn btn-sm btn-outline-dark #{columns.empty? ? 'disabled': ''}", remote: true)
                -else
                  =link_to("drop unique 'story per publication' index",
                           story_type_staging_table_index_path(@story_type, staging_table, staging_table.index),
                           class: 'btn btn-sm btn-outline-dark', method: :delete, remote: true)
          %br
      .row.font-weight-bold
        .col-6 name
        .col-6 type
      %hr.mb-1.mt-1/
      -columns.each do |_id, col|
        .row
          .col-6
            #{col[:name]}
          .col-6
            #{col[:type]} #{col[:options].values.all?(nil) ? '' : "(#{col[:options].values.compact.join(',')})"}

      %hr.mt-0/
      .row
        .col-6
          %p story per publication uniq index: #{'index is empty or not set' unless uniq_index.present?}
        .col-6
          -uniq_index.each do |index|
            =index
            %br/
