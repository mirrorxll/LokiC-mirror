-if correct_account?(@work_request)
  .dropdown
    %button#workRequestStatusButton.dropdown-toggle.border.rounded{ class: "bg-#{status_color(@work_request.status.name)}", "aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :type => "button"}
      =@work_request.status.name
    .small.dropdown-menu.manual-dropdown-menu.dropdown-menu-right{ "aria-labelledby" => "workRequestStatusButton" }
      -Status.work_request_statuses.each do |s|
        .dropdown-item.small{status_id: s.id, onclick: 'changeRequestStatus(this);'}
          =s.name

  :javascript
    function changeRequestStatus(status) {
      let reasons = null;

      if(['blocked', 'canceled'].find((el) => { return el === status.innerText })) {
        reasons = prompt(`Status '${status.innerText}' :(\nWhy?`);

        if(!reasons) return false;
      }

      let statusId = status.getAttribute('status_id');
      let statusDiv = document.querySelector('#workRequestStatus')
      let onLoading = document.createElement('div');
      let onLoadingSnap = document.createElement('span');

      onLoadingSnap.classList.add('sr-only');
      onLoading.classList.add('spinner-border', 'spinner-border-sm');
      onLoading.appendChild(onLoadingSnap);

      statusDiv.innerHTML = ''
      statusDiv.appendChild(onLoading)

      Rails.ajax({
        type: "PATCH",
        dataType: 'script',
        url: `#{change_work_request_progress_statuses_path(@work_request)}`,
        data: `status_id=${statusId}` + (reasons ? `&reasons=${reasons}` : '')
      })
    }

-else
  .d-inline-block
    status:
  #statusButton.d-inline-block.border.text-center.rounded.pl-2.pr-2{ class: "bg-#{status_color(@work_request.status.name)}" }
    =@work_request.status.name
